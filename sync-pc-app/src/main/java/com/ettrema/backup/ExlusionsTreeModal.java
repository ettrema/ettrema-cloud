/*
 * ExlusionsTreeModal.java
 *
 * Created on 16/10/2010, 9:25:54 PM
 */
package com.ettrema.backup;

import com.ettrema.backup.view.FileTreeModel;
import it.cnr.imaa.essi.lablib.gui.checkboxtree.CheckboxTree;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.tree.TreePath;
import org.jdesktop.application.Action;

/**
 *
 * @author brad
 */
public class ExlusionsTreeModal extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;
    private final Runnable callback;
    private final CheckboxTree tree;
    private final File root;
    private final FileTreeModel treeModel;
    private TreePath[] checkedPaths;

    /** Creates new form ExlusionsTreeModal */
    public ExlusionsTreeModal(java.awt.Frame parent, File root, Runnable callback) {
        super(parent, true);
        this.root = root;
        this.callback = callback;
        initComponents();
        treeModel = new FileTreeModel(root);
        tree = new CheckboxTree(treeModel);
        tree.setRowHeight(23);
        scrollPane.setViewportView(tree);
        //tree.setSize( this.getSize());
        tree.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlOuter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        cmdOk = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.ettrema.backup.BackupApplication.class).getContext().getResourceMap(ExlusionsTreeModal.class);
        pnlOuter.setBackground(resourceMap.getColor("pnlOuter.background")); // NOI18N
        pnlOuter.setName("pnlOuter"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        scrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(resourceMap.getColor("scrollPane.border.lineColor"))); // NOI18N
        scrollPane.setName("scrollPane"); // NOI18N

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.ettrema.backup.BackupApplication.class).getContext().getActionMap(ExlusionsTreeModal.class, this);
        cmdOk.setAction(actionMap.get("saveAndClose")); // NOI18N
        cmdOk.setText(resourceMap.getString("cmdOk.text")); // NOI18N
        cmdOk.setName("cmdOk"); // NOI18N

        cmdCancel.setAction(actionMap.get("closeModal")); // NOI18N
        cmdCancel.setText(resourceMap.getString("cmdCancel.text")); // NOI18N
        cmdCancel.setName("cmdCancel"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdOk, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdOk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlOuterLayout = new javax.swing.GroupLayout(pnlOuter);
        pnlOuter.setLayout(pnlOuterLayout);
        pnlOuterLayout.setHorizontalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlOuterLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(181, Short.MAX_VALUE))))
        );
        pnlOuterLayout.setVerticalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pnlOuter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void closeModal() {
        this.setVisible(false);
    }

    @Action
    public void saveAndClose() {
        this.checkedPaths = tree.getCheckingRoots();
        callback.run();
        this.setVisible(false);
    }

    public void setChecked(List<File> checkedFolders) {
        if( checkedFolders == null ) {
            return ;
        }
        for (File f : checkedFolders) {
            File[] names = findNames(f);
            TreePath tp = new TreePath(names);
            tree.addCheckingPath(tp);
        }
    }

    public TreePath[] getCheckedPaths() {
        return checkedPaths;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlOuter;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables

    private File[] findNames(File f) {
        List<File> list = new ArrayList<File>();
        findNames(f, list);
        File[] arr = new File[list.size()];
        list.toArray(arr);
        return arr;
    }


    private void findNames(File f, List<File> list) {
        if( f == null ) { // can happen if have changed root
            return;
        }
        if( f.equals(root) ) {
            list.add(root);
            return ;
        } else {
            findNames(f.getParentFile(), list);
            list.add(f);
        }
    }
}
