/*
 * QueueView.java
 *
 * Created on 14/10/2010, 11:36:55 AM
 */
package com.ettrema.backup;

import com.ettrema.backup.history.HistoryDao.NewHistoryItemEvent;
import com.ettrema.event.Event;
import java.sql.Timestamp;
import javax.swing.ImageIcon;
import com.ettrema.backup.history.HistoryDao;
import com.ettrema.event.EventListener;
import com.ettrema.event.EventManager;
import java.util.Date;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brad
 */
public class HistoryView extends javax.swing.JFrame implements EventListener{

    private static final long serialVersionUID = 1L;
    private HistoryDao historyDao;
    private DefaultTableModel model;

    /** Creates new form QueueView */
    public HistoryView( HistoryDao historyDao, EventManager eventManager ) {
        this.historyDao = historyDao;

        ImageIcon imageIcon = new ImageIcon( getClass().getResource( "/logo16x16.png" ), "" );
        setIconImage( imageIcon.getImage() );

        this.setTitle( "History" );
        initComponents();
        TableUtils.setTimeColumn( tblQueue, "Date" );
        TableUtils.setByteSizeColumn( tblQueue, "Size" );

        model = (DefaultTableModel) tblQueue.getModel();

        SwingUtilities.invokeLater( new Runnable() {

            public void run() {
                loadData();
            }
        } );
        
       eventManager.registerEventListener( this, NewHistoryItemEvent.class);
    }

    private void loadData() {
        historyDao.loadHistory( new HistoryDao.ResultCollector() {

            public void onResult( String path, Long bytes, String repo, String action, String notes, String status, Timestamp date ) {
                addRow(path, bytes, repo, action, notes, status, date );
            }
        } );
    }

    private void addRow( String path, Long bytes, String repo, String action, String notes, String status, Timestamp date ) {
        model.addRow( new Object[]{new Date( date.getTime() ),path, action, status, bytes, repo, notes} );
    }

    private void insertRow( String path, Long bytes, String repo, String action, String notes, String status, Timestamp date ) {
        model.insertRow(0, new Object[]{new Date( date.getTime() ),path, action, status, bytes, repo, notes} );
    }


    public void onEvent( Event e ) {
        if( e instanceof HistoryDao.NewHistoryItemEvent) {
            final HistoryDao.NewHistoryItemEvent h = (NewHistoryItemEvent) e;
            SwingUtilities.invokeLater( new Runnable() {

                public void run() {
                    insertRow(h.getLocalFile().getAbsolutePath(), h.getNumBytes(), h.getRepo(), h.getAction(), h.getNotes(), h.getStatus(), new Timestamp( System.currentTimeMillis()));
                }
            });
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pblOuter = new javax.swing.JPanel();
        pnlQuery = new javax.swing.JPanel();
        lblCurrentScan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQueue = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.ettrema.backup.BackupApplication.class).getContext().getResourceMap(HistoryView.class);
        pblOuter.setBackground(resourceMap.getColor("pblOuter.background")); // NOI18N
        pblOuter.setName("pblOuter"); // NOI18N

        pnlQuery.setBackground(resourceMap.getColor("pnlQuery.background")); // NOI18N
        pnlQuery.setName("pnlQuery"); // NOI18N

        lblCurrentScan.setFont(resourceMap.getFont("lblCurrentScan.font")); // NOI18N
        lblCurrentScan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCurrentScan.setText(resourceMap.getString("lblCurrentScan.text")); // NOI18N
        lblCurrentScan.setName("lblCurrentScan"); // NOI18N

        javax.swing.GroupLayout pnlQueryLayout = new javax.swing.GroupLayout(pnlQuery);
        pnlQuery.setLayout(pnlQueryLayout);
        pnlQueryLayout.setHorizontalGroup(
            pnlQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQueryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCurrentScan, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );
        pnlQueryLayout.setVerticalGroup(
            pnlQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQueryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCurrentScan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(resourceMap.getColor("jScrollPane1.background")); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblQueue.setFont(resourceMap.getFont("tblQueue.font")); // NOI18N
        tblQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "File", "Action", "Status", "Size", "Destination", "Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQueue.setName("tblQueue"); // NOI18N
        tblQueue.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblQueue);

        javax.swing.GroupLayout pblOuterLayout = new javax.swing.GroupLayout(pblOuter);
        pblOuter.setLayout(pblOuterLayout);
        pblOuterLayout.setHorizontalGroup(
            pblOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pblOuterLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnlQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
        );
        pblOuterLayout.setVerticalGroup(
            pblOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pblOuterLayout.createSequentialGroup()
                .addComponent(pnlQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
        );

        getContentPane().add(pblOuter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurrentScan;
    private javax.swing.JPanel pblOuter;
    private javax.swing.JPanel pnlQuery;
    private javax.swing.JTable tblQueue;
    // End of variables declaration//GEN-END:variables

}
