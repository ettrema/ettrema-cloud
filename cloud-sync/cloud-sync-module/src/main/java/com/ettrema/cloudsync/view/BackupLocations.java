package com.ettrema.cloudsync.view;

import com.ettrema.backup.config.*;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author brad
 */
public class BackupLocations extends javax.swing.JPanel {

    public BackupLocations() {
        initComponents(); 
    }


    public void load(Job job) {
        if( job == null ) {
            return ;
        }
        for( Repo r : job.getRepos() ) {
            if( r instanceof LocalRepo) {
                initRepo((LocalRepo)r);
            }
        }
        List<BackupLocationPanel> locationPanels = Arrays.asList(pics, vids, music, docs);
        for(BackupLocationPanel p : locationPanels) {
            p.setDirectory("");
        }
        for( Root root : job.getRoots()) {
            if( root.getRepoName().endsWith("Pictures") ) {
                pics.setDirectory(root.getFullPath());
                pics.setExcludedFolders(getExcludedFiles(root.getExclusions() ));

            } else if( root.getRepoName().endsWith("Videos") ) {
                vids.setDirectory(root.getFullPath());
                vids.setExcludedFolders(getExcludedFiles(root.getExclusions() ));

            } else if( root.getRepoName().endsWith("Music") ) {
                music.setDirectory(root.getFullPath());
                music.setExcludedFolders(getExcludedFiles(root.getExclusions() ));

            } else if( root.getRepoName().endsWith("Documents") ) {    
                docs.setDirectory(root.getFullPath());
                docs.setExcludedFolders(getExcludedFiles(root.getExclusions() ));

            }
        }
    }

    private void initRepo(LocalRepo localRepo) {
        //txtOtherDevice.setText(localRepo.getTarget().getAbsolutePath());
    }

    void save(String accPath, Job job) {
        job.getRoots().clear();
        for( Root root : getRoots(accPath, job ) ) {
            job.getRoots().add( root );
        }        
    }
    
    public List<Root> getRoots(String accPath, Job job) {
        List<Root> list = new ArrayList<Root>();
        List<BackupLocationPanel> locationPanels = Arrays.asList(pics, vids, music, docs);
        for( BackupLocationPanel pnl : locationPanels ) {
            Root root = pnl.toRoot(accPath, job);
            if( root != null ) {
                list.add( root );
            }
        }
        return list;
    }

    public File getOtherDeviceLocation() {
        return null;
    }

    private List<File> getExcludedFiles(List<Dir> exclusions) {
        List<File> list = new ArrayList<File>();
        for(Dir d : exclusions) {
            list.add(new File(d.getFullPath()));
        }
        return list;
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlOuter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlLocations = new javax.swing.JPanel();
        pics = new com.ettrema.cloudsync.view.BackupLocationPanel();
        vids = new com.ettrema.cloudsync.view.BackupLocationPanel();
        music = new com.ettrema.cloudsync.view.BackupLocationPanel();
        docs = new com.ettrema.cloudsync.view.BackupLocationPanel();

        setLayout(new java.awt.BorderLayout());

        pnlOuter.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 176, 50));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(BackupLocations.class, "BackupLocations.jLabel1.text")); // NOI18N

        pnlLocations.setBackground(new java.awt.Color(255, 255, 255));
        pnlLocations.setLayout(new javax.swing.BoxLayout(pnlLocations, javax.swing.BoxLayout.Y_AXIS));

        pics.setDirType(com.ettrema.cloudsync.account.AccountUtils.DirType.pictures);
        pics.setLocationText(org.openide.util.NbBundle.getMessage(BackupLocations.class, "BackupLocations.pics.locationText")); // NOI18N
        pnlLocations.add(pics);

        vids.setDirType(com.ettrema.cloudsync.account.AccountUtils.DirType.videos);
        vids.setLocationText(org.openide.util.NbBundle.getMessage(BackupLocations.class, "BackupLocations.vids.locationText")); // NOI18N
        pnlLocations.add(vids);

        music.setDirType(com.ettrema.cloudsync.account.AccountUtils.DirType.music);
        music.setLocationText(org.openide.util.NbBundle.getMessage(BackupLocations.class, "BackupLocations.music.locationText")); // NOI18N
        pnlLocations.add(music);

        docs.setDirType(com.ettrema.cloudsync.account.AccountUtils.DirType.documents);
        docs.setLocationText(org.openide.util.NbBundle.getMessage(BackupLocations.class, "BackupLocations.docs.locationText")); // NOI18N
        pnlLocations.add(docs);

        javax.swing.GroupLayout pnlOuterLayout = new javax.swing.GroupLayout(pnlOuter);
        pnlOuter.setLayout(pnlOuterLayout);
        pnlOuterLayout.setHorizontalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlLocations, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlOuterLayout.setVerticalGroup(
            pnlOuterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOuterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnlOuter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.ettrema.cloudsync.view.BackupLocationPanel docs;
    private javax.swing.JLabel jLabel1;
    private com.ettrema.cloudsync.view.BackupLocationPanel music;
    private com.ettrema.cloudsync.view.BackupLocationPanel pics;
    private javax.swing.JPanel pnlLocations;
    private javax.swing.JPanel pnlOuter;
    private com.ettrema.cloudsync.view.BackupLocationPanel vids;
    // End of variables declaration//GEN-END:variables
}
